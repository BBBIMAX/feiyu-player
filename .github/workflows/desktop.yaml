name: Build and Release
on:
  workflow_dispatch:
    inputs:
      release_message:
        description: "版本更新说明"
        type: string
        required: true
        default: |
          发现新版本✨ 如果更新失败，请到官网下载最新版本：https://feiyu-player.xbox.work

env:
  RELEASE_MESSAGE: ${{ inputs.release_message }}

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          cache-dependency-path: "**/pnpm-lock.yaml"

      - name: Setup rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        if: matrix.platform != 'windows-latest'
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./packages/feiyu-desktop/src-tauri -> target"

      - name: Install feiyu web dependencies
        run: cd packages/feiyu && pnpm i

      - name: Install feiyu desktop dependencies
        run: cd packages/feiyu-desktop && pnpm i

      - name: Build feiyu web
        run: cd packages/feiyu && pnpm build:desktop

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libsoup-3.0-dev libjavascriptcoregtk-4.1-dev

      - id: tauri
        name: Build feiyu desktop
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          projectPath: "./packages/feiyu-desktop"
          tagName: "v__VERSION__"
          releaseName: "v__VERSION__"
          releaseBody: ${{ env.RELEASE_MESSAGE }}
          releaseDraft: true
          prerelease: false

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ${{ join(fromJson(steps.tauri.outputs.artifactPaths), fromJson('"\n"')) }}